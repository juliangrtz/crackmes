Crackme: Himsord's Infinity Keygenme v1
Solved by: acruel, 2016-Jan-28
Tools used: IDA v6.8

Solution:
####################################
# Coded by expl0itr & Lasertrap    #
#       Infinity v1 | 2016         #
####################################

Welcome to -> INFINITY... <-
Successfully initialized console, please enter your credentials!
User-ID: acruel
Password: 1740AA6C
You cracked me.


When you run the crackme, it reads in two inputs: User-ID and Password. Then it calls sub_A51770. If the return value isn't zero, you'll get the good-boy message.

--
.text:00A51B00 call    sub_A51770
.text:00A51B05 add     esp, 30h
.text:00A51B08 mov     edx, offset aYouCrackedMe_      ; "You cracked me."
.text:00A51B0D test    eax, eax
.text:00A51B0F push    offset sub_A523B0
.text:00A51B14 push    ecx
.text:00A51B15 mov     ecx, ds:?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A ; std::basic_ostream<char,std::char_traits<char>> std::cout
.text:00A51B1B jnz     short loc_A51B22
.text:00A51B1D mov     edx, offset aYouDidnTCrackM     ; "You didn't crack me."
--


sub_A51770 first checks if the length of the User-ID is 6. It and only if it's true, the function proceeds to generate the password based on the Unix time.

--
.text:00A517FF                 push    0               ; Time
.text:00A51801                 call    ds:_time64
.text:00A51807                 add     esp, 4
.text:00A5180A                 mov     dword ptr [ebp+Time], eax
.text:00A5180D                 lea     eax, [ebp+Time]
.text:00A51810                 mov     dword ptr [ebp+Time+4], edx
.text:00A51813                 push    eax             ; Time
.text:00A51814                 call    ds:_localtime64
.text:00A5181A                 mov     esi, ds:__imp_??3@YAXPAX@Z ; operator delete(void *)
.text:00A51820                 add     esp, 4
.text:00A51823                 mov     edx, [eax+14h]  ; year since 1900
.text:00A51826                 mov     ecx, [eax+10h]  ; month of year
.text:00A51829                 add     edx, 76Ch
.text:00A5182F                 mov     eax, [eax+0Ch]  ; day of month
.text:00A51832                 inc     ecx
.text:00A51833                 sub     edx, ecx
.text:00A51835                 add     edx, edx
.text:00A51837                 add     eax, edx
.text:00A51839                 imul    eax, edx
.text:00A5183C                 imul    edi, eax, 539h
.text:00A51842                 cmp     [ebp+var_34], 10h
.text:00A51846                 jb      short loc_A51850
--

The dword value stored on edi at 0x00A5183C is then converted to a hexadecimal string by the function sub_1201710. It is then compared with the Password user entered.

If they are equal and the string generated by sub_1201710 isn't "ERROR", sub_A51770 return 1.

--
.text:01201850 mov     edx, edi
.text:01201852 mov     byte ptr [ebp+Dst], 0
.text:01201856 lea     ecx, [ebp+var_28]               ; Dst
.text:01201859 mov     [ebp+var_38], 0
.text:01201860 mov     [ebp+var_34], 0Fh
.text:01201867 call    sub_1201710                     ; convert edi to hex string or "ERROR"
.text:0120186C mov     byte ptr [ebp+var_4], 2
.text:01201870 lea     eax, [ebp+arg_18]
.text:01201873 cmp     [ebp+arg_2C], 10h
.text:01201877 push    [ebp+arg_28]
.text:0120187A cmovnb  eax, [ebp+arg_18]
.text:0120187E push    eax
.text:0120187F push    [ebp+var_18]
.text:01201882 push    ecx
.text:01201883 lea     ecx, [ebp+var_28]
.text:01201886 call    sub_1201D40                     ; 1st test
.text:0120188B test    eax, eax
.text:0120188D jnz     short loc_12018AD
.text:0120188F push    5
.text:01201891 push    offset aError                   ; "ERROR"
.text:01201896 push    [ebp+var_18]
.text:01201899 push    ecx
.text:0120189A lea     ecx, [ebp+var_28]
.text:0120189D call    sub_1201D40                     ; 2nd test
.text:012018A2 test    eax, eax
.text:012018A4 jz      short loc_12018AD
.text:012018A6 mov     edi, 1                          ; success! returns 1
.text:012018AB jmp     short loc_12018AF
--

Below is a keygen written in Python. You can use any string of length 6 as User-ID, e.g. "acruel".


#!/usr/bin/python

import warnings
import datetime
import numpy as np

warnings.filterwarnings('ignore')

now = datetime.datetime.now()

edx = now.year - 1900 + 0x76C
ecx = now.month
eax = now.day
edx -= ecx
edx += edx
eax += edx
eax = np.int32(eax) * np.int32(edx)
edi = np.int32(eax) * np.int32(0x539)

print 'password: %X' % edi
